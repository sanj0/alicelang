### basic utility to work with booleans ###

# --- boolean constants --- #
export var "true"  :STRUE
export var 1       :TRUE
export var "false" :SFALSE
export var 0       :FALSE

# --- boolean subprograms --- #
# pop a value b. If b is equal to the constant TRUE ("true"),
# push 1. push 0 otherwise
export fun {
    STRUE eq
}:bool-to-num

# pop a value b. If b is 1, push the constant TRUE ("true").
# push FALSE ("false") otherwise
export fun {
    if (1 eq) {
        STRUE
    } else {
        SFALSE
    } fi
}:num-to-bool

# like the std not, but works with
# TRUE ("true") and FALSE ("false") as well
export fun {
    d
    if (type NUMBER eq) {
        not
    } else {
        if (STRUE eq) {
            SFALSE
        } else {
            STRUE
        } fi
    } fi
}:bnot

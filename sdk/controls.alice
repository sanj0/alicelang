### introduces convenient flow controls through marker functions

# ----- #
# enhanced function declaration
# usage:
# fun {
# }:name
# , which is equivalent to:
# {}:name

### marker function that calls var
export var {var}:fun

# ----- #
# enhanced variable declaration
# usage:
# exp var "hi":greeting
# glob "exported variable!":my-exported-var
# clob "exported constant!":my-exported-const

### convencience function that calls export
export fun {export}:exp

### convencience function that calls export var
export fun {export var}:glob

### convencience function that calls export const
export fun {export const}:clob

# ----- #
# head of stack pointer
# usage:
# var head :my-var

### marker function that points to the head of the stack by doing absolutely nothing
export fun {}:head

# ----- #
# enhanced else
# usage:
# if (val 3 eq) {
#   "hi"P
# } else {
#   "hey"P
# } fi

### marker function that puts (1) onto the stack
export fun {(1)}:else

# ----- #
# enhanced while
# usage:
# while (cond) {"hi"P} do

### marker function that does nothing
export fun {}:while

# ----- #
# enhanced for style loop
# usage:
# for (glob 0:i) (i 10 lt) (i ++:i) {
#   i P
# } rof

### marker function thats does nothing
export fun {}:for

### loop function
### seems to be a bit more than 10 % slower than pure while - do
export fun {
    var :body
    var :mod
    var :cond
    var :init
    init
    while (cond) {
        body
        mod
    } do
}:rof

### marker functions that do nothing
export fun {}:run
export fun {}:from
export fun {}:to

